---
- hosts: localhost
  gather_facts: yes  # Changing to yes to gather facts
  tasks:
    - name: Update Pip
      become: yes
      pip:
        name: pip
        extra_args: --upgrade

    - name: Install jq using apt
      become: yes
      apt:
        name: jq
        update_cache: yes

    - name: Install necessary packages
      become: yes
      apt:
        name: "{{ packages }}"
        update_cache: yes
      vars:
        packages:
        - pkg-config
        - libmysqlclient-dev

    - name: Get latest Terraform version
      become: yes
      shell: |
        curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r -M '.current_version'
      register: latest_terraform_version

    - name: Check if Terraform is installed
      shell: "terraform version | head -n1 | cut -d'v' -f2"
      register: current_terraform_version
      ignore_errors: true

    - name: Download Terraform
      become: yes
      get_url:
        url: "https://releases.hashicorp.com/terraform/{{ latest_terraform_version.stdout }}/terraform_{{ latest_terraform_version.stdout }}_linux_amd64.zip"
        dest: "/tmp/terraform.zip"
      when: latest_terraform_version.stdout != current_terraform_version.stdout

    - name: Install unzip if not present
      become: yes
      apt:
        name: unzip
        state: present
      when: latest_terraform_version.stdout != current_terraform_version.stdout

    - name: Unzip Terraform
      become: yes
      unarchive:
        src: "/tmp/terraform.zip"
        dest: "/usr/local/bin/"
        remote_src: yes
        mode: 0755
      when: latest_terraform_version.stdout != current_terraform_version.stdout

    - name: Check if Helm is installed
      shell: "helm version || echo 'not installed'"
      register: helm_check
      ignore_errors: true

    - name: Get the latest stable version of Helm
      shell: curl -s https://api.github.com/repos/helm/helm/releases/latest | jq -r .tag_name
      register: latest_helm_version
      when: "'not installed' in helm_check.stdout"

    - name: Download Helm
      get_url:
        url: "https://get.helm.sh/helm-{{ latest_helm_version.stdout }}-linux-amd64.tar.gz"
        dest: "/tmp/helm.tar.gz"
      when: "'not installed' in helm_check.stdout"

    - name: Extract Helm
      unarchive:
        src: "/tmp/helm.tar.gz"
        dest: "/tmp/"
        remote_src: yes
      when: "'not installed' in helm_check.stdout"

    - name: Move Helm binaries to /usr/local/bin
      become: yes
      command: mv /tmp/linux-amd64/helm /usr/local/bin/
      when: "'not installed' in helm_check.stdout"

    - name: Cleanup Helm tar file
      become: yes
      file:
        path: "/tmp/helm.tar.gz"
        state: absent
      when: "'not installed' in helm_check.stdout"

    - name: Cleanup Terraform zip file
      become: yes
      file:
        path: "/tmp/terraform.zip"
        state: absent
      when: latest_terraform_version.stdout != current_terraform_version.stdout